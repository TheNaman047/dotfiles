#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

## INFO
# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

#--PREFIX----------------------------------------------------------------------
# Set prefix
set-option -g prefix C-s
unbind C-b
bind C-s send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf; # display-message '~/config/tmux/tmux.conf reloaded'
#--------------------------------------------------------------------------

#--STATUS----------------------------------------------------------------------
bind -r e set -g status
#--------------------------------------------------------------------------

#--PANE----------------------------------------------------------------------
# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Resize panes more easily
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5

# Sync panes (to run same commands in all)
bind-key C-v setw synchronize-panes on
bind-key C-q setw synchronize-panes off

# Kill pane
bind-key C-x kill-pane
#--------------------------------------------------------------------------

#--WINDOW----------------------------------------------------------------------
# Switch between previous and next windows with repeatable
bind -r C-k select-window -t :-
bind -r C-j select-window -t :+

# Move the current window to the next window or previous window position
# bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
# bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# Break pane out of window
bind-key B break-pane -d
# Put pane back into window
bind-key E command-prompt -p "join pane from: "  "join-pane -h -s '%%'"
# Open lazygit in a popup with prefix+g
bind-key g new-window -c "#{pane_current_path}" -n "lazygit" "lazygit"
# Open lazydocker in a popup with prefix+d
bind-key d display-popup -d "#{pane_current_path}" -w 80% -h 80% -E "lazydocker"
# Open an application in a new window with prefix+o, and allow me to provide the app name
bind-key o command-prompt -p "open app: " "new-window '%%'"
# Show a promp to kill a window by id with prefix+X
bind-key X command-prompt -p "kill window: " "kill-window -t '%%'"

# Split window horizontally(\) and vertically(-)
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"
# Rename current window
bind C-r command-prompt "rename-window %%"
#--------------------------------------------------------------------------

#--SESSION----------------------------------------------------------------------
# Create new session
bind-key -r b new-session

# Switch between two most recently used sessions
# bind-key l switch-client -l

# Change sessions from prompt
unbind s
bind s display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session |\
    xargs tmux switch-client -t"
#--------------------------------------------------------------------------

#--WORKSPACES----------------------------------------------------------------------
# Tmux Workspace Automation Configuration
# Source this file from your main tmux.conf

# Workspace creation functions
# bind-key W display-menu -T "Workspaces" \
#     "coverstar" d "run-shell 'tmux new-session -d -s dev -c ~/dev; tmux split-window -h -t dev:1 -c ~/dev; tmux select-window -t dev:1.1; tmux send-keys -t dev:1.1 \"nvim\" Enter; tmux send-keys -t dev:1.2 \"git status\" Enter; tmux switch-client -t dev'" \
#     "Full Stack" f "run-shell '~/.config/tmux/scripts/create-fullstack-workspace.sh'" \
#     "DevOps" o "run-shell '~/.config/tmux/scripts/create-devops-workspace.sh'" \
#     "Documentation" t "run-shell '~/.config/tmux/scripts/create-docs-workspace.sh'" \
#     "Monitoring" m "run-shell '~/.config/tmux/scripts/create-monitoring-workspace.sh'" \
#     "" \
#     "Kill All Workspaces" k "run-shell 'tmux kill-session -a'"

# Quick workspace keybindings
bind-key Y run-shell '~/.config/tmux/scripts/coverstar-workspace.sh'
bind-key M run-shell '~/.config/tmux/scripts/ai-emotion-workspace.sh'
bind-key N run-shell '~/.config/tmux/scripts/new-proj-workspace.sh'
bind-key O display-popup -E '~/.config/tmux/scripts/session-dispensary.sh $HOME/Projects'
bind-key A display-popup -E '~/.config/tmux/scripts/session-dispensary.sh $HOME/Projects/alfa-pte/code'
#--------------------------------------------------------------------------
